
function serverBlock(app) {
    if (!app.port) {
        return `# App ${app.name} didn\`t start yet, please run it first.\n`;
    }

    return `
    # App: ${app.name} (${app.description})
    ${app.config ? app.config : ''}
    server {
        listen 80;
        server_name ${app.domains.join(' ')};

        location / {
            proxy_pass http://localhost:${app.port};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }\n`;
}

function script(app) {
    let startupScript = `#!/bin/bash

# Automatically generated by the serman.
get_free_port() { python3 -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()' || for p in {2000..9000}; do python3 -c "import socket; s=socket.socket(); s.bind(('', $p)) or exit(1); s.close()" 2>/dev/null && echo $p && break; done; }

NAME="${app.name}"      # name of the service
PORT=$(get_free_port)
SCRIPT_PATH="$(realpath "$0")"

SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"
SERVER_DIR="$(realpath "$SCRIPT_DIR/server")"

cd "$SERVER_DIR" || { echo "Failed to change directory to $SERVER_DIR"; exit 1; }

serman point $NAME $PORT

export PORT=$PORT
echo ""
echo Hello world from Serman!
echo "When ready, uncomment the code in" $SCRIPT_PATH to run your app!

# When ready, uncomment this code:
# ${app.start}
`;

    return startupScript;
}

module.exports = {
    script,
    serverBlock
}
